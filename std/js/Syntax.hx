/*
 * Copyright (C)2005-2017 Haxe Foundation
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sublicense,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */
package js;

/**
	This class provides functions to generate native JavaScript code.

	It is implemented in the JavaScript generator and does not support
	usage through reflection or Dynamic.
**/
extern class Syntax {
	/**
		Generates `code` as JavaScript code at the place of the call.

		If `arguments` are provided, occurrences of `{0}`, {1}` ... `{N}`
		in the `code` string are replaced with the Nth additional argument.
		Verbatim `{0}` can then be generated by using `{{0}}` in the `code`
		string. If no corresponding argument is found, an error is emitted.
	**/
	static function code<T>(code:String, arguments:haxe.extern.Rest<Any>):T;

	/**
		Generates `(object instanceof type)`.
	**/
	static function instanceof<A, B>(object:A, type:B):Bool;

	/**
		Generates `((a) === b)`.
	**/
	static function strictEq<T>(a:T, b:T):Bool;

	/**
		Generates `((a) !== b)`.
	**/
	static function strictNeq<T>(a:T, b:T):Bool;

	/**
		Generates `typeof(object)`.
	**/
	static function typeof<A, B>(object:A):B;
}